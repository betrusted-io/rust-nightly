name: build nightly

# Controls when the workflow will run
on:
  # Triggers the workflow nightly (SGT)
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │  ┌───────────── day of the month (1 - 31)
    #        │  │  │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │  │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │  │ │ │
    #        │  │  │ │ │
    #        │  │  │ │ │
    #        *  *  * * *
    - cron: '26 15 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 
  
jobs:
  build-farpatch:
    runs-on: ubuntu-latest

    steps:
      - name: Determine Rust version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF} | cut -d/ -f3 | cut -d- -f1 | cut -d. -f1,2,3)"
        id: extract_rust_version

      - name: Setup riscv gnu/gcc toolchain
        uses: gregdavill/setup-riscv-gnu-toolchain@v1.0

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: build

      - name: Install Rust nightly toolchain ${{ steps.extract_rust_version.outputs.version }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ steps.extract_rust_version.outputs.version }}

      - name: Create riscv32imac-unknown-xous-elf sysroot
        run: |
          rm -rf $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf \
          && mkdir -p $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf/lib \
          && rustc --version | awk '{print $2}' > $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf/RUST_VERSION

      - name: Apply patches
        run: |
          cd build
          && git am ../*.patch

      - name: Build Rust libstd
        run: |
          export RUST_COMPILER_RT_ROOT=$(pwd)/src/llvm-project/compiler-rt \
          && rm -rf target \
          && cargo build \
            --target riscv32imac-unknown-xous-elf \
            -Zbinary-dep-depinfo \
            --release \
            --features "panic-unwind compiler-builtins-c compiler-builtins-mem" \
            --manifest-path "library/sysroot/Cargo.toml" \
          && cp target/riscv32imac-unknown-xous-elf/release/deps/*.rlib $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf/lib \
          && (dest=$(pwd) && cd $(rustc --print sysroot) && zip -r ${dest}/riscv32imac-unknown-xous_${{ steps.extract_rust_version.outputs.version }}.zip lib/rustlib/riscv32imac-unknown-xous-elf/)
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 0
          CARGO_PROFILE_RELEASE_OPT_LEVEL: 3
          CARGO_PROFILE_RELEASE_DEBUG_ASSERTIONS: false
          RUSTC_BOOTSTRAP: 1
          RUSTFLAGS: -Cforce-unwind-tables=yes -Cembed-bitcode=yes
          __CARGO_DEFAULT_LIB_METADATA: stablestd
          CC: riscv-none-embed-gcc
          AR: riscv-none-embed-ar
